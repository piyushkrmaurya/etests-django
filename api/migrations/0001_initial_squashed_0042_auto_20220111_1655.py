# Generated by Django 3.0.3 on 2022-01-11 11:27

import api.models
import api.utils
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import etests.storage_backends

class Migration(migrations.Migration):

    replaces = [('api', '0001_initial'), ('api', '0002_auto_20200303_2119'), ('api', '0003_auto_20200304_1935'), ('api', '0004_auto_20200304_2037'), ('api', '0005_auto_20200305_0048'), ('api', '0006_auto_20200305_1322'), ('api', '0007_question_option_count'), ('api', '0008_auto_20200305_1534'), ('api', '0009_institute_joined_students'), ('api', '0010_auto_20200318_2209'), ('api', '0011_institute_handle'), ('api', '0012_auto_20200325_1303'), ('api', '0013_auto_20200403_2215'), ('api', '0014_auto_20200404_1249'), ('api', '0015_auto_20200404_1807'), ('api', '0016_auto_20200405_0051'), ('api', '0017_contact'), ('api', '0018_auto_20200406_0235'), ('api', '0019_auto_20200406_0256'), ('api', '0020_contact_date_added'), ('api', '0021_institute_courses'), ('api', '0022_auto_20200412_1354'), ('api', '0023_image'), ('api', '0024_institute_centers'), ('api', '0025_auto_20200412_2332'), ('api', '0026_auto_20200414_2252'), ('api', '0027_user_image'), ('api', '0028_auto_20200415_1339'), ('api', '0029_institute_questions'), ('api', '0030_institute_joining_key'), ('api', '0031_institute_links'), ('api', '0032_institute_forms'), ('api', '0033_user_address'), ('api', '0034_user_site'), ('api', '0035_auto_20200626_2315'), ('api', '0036_auto_20200627_1030'), ('api', '0037_remove_enrollment_joining_key'), ('api', '0038_auto_20200627_1102'), ('api', '0039_auto_20200627_1934'), ('api', '0040_institute_extras'), ('api', '0041_auto_20200724_1616'), ('api', '0042_auto_20220111_1655')]

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_student', models.BooleanField(default=False)),
                ('is_institute', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'api_user',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(blank=True, max_length=500, null=True)),
                ('address', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.IntegerField(verbose_name='position')),
                ('name', models.CharField(max_length=200)),
                ('countries', django_countries.fields.CountryField(blank=True, max_length=746, multiple=True)),
                ('slug', models.SlugField(editable=False)),
                ('image', models.CharField(blank=True, default='exam.png', max_length=20480, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='QuestionImage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.ImageField(storage=etests.storage_backends.PublicMediaStorage(), upload_to='', validators=[api.models.validate_file_size])),
            ],
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('current_credits', models.IntegerField(default=0)),
                ('verified', models.BooleanField(default=False)),
                ('show', models.BooleanField(default=True)),
                ('rating', models.FloatField(default=0)),
                ('about', models.CharField(blank=True, max_length=1024, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('handle', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'api_institute',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=1, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_student',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('aits', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('activation_time', models.DateTimeField(blank=True, null=True)),
                ('closing_time', models.DateTimeField(blank=True, null=True)),
                ('time_alotted', models.DurationField(default=datetime.timedelta(seconds=10800))),
                ('sections', models.JSONField(blank=True, null=True)),
                ('questions', models.JSONField(blank=True, null=True)),
                ('answers', models.JSONField(blank=True, null=True)),
                ('stats', models.JSONField(blank=True, null=True)),
                ('corrected', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('visible', models.BooleanField(default=True)),
                ('free', models.BooleanField(default=False)),
                ('marks_list', models.JSONField(blank=True, null=True)),
                ('syllabus', models.CharField(blank=True, max_length=1024, null=True)),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tests', to='api.Exam')),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='api.Institute')),
                ('registered_students', models.ManyToManyField(blank=True, related_name='tests', to='api.Student')),
            ],
            options={
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='TestSeries',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('price', models.IntegerField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('visible', models.BooleanField(default=False)),
                ('discount', models.IntegerField(default=0)),
                ('exams', models.ManyToManyField(blank=True, related_name='test_series', to='api.Exam')),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_series', to='api.Institute')),
                ('registered_students', models.ManyToManyField(blank=True, to='api.Student')),
                ('tests', models.ManyToManyField(blank=True, related_name='test_series', to='api.Test')),
            ],
            options={
                'verbose_name': 'Test Series',
                'verbose_name_plural': 'Test Series',
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('credits_added', models.IntegerField(default=0)),
                ('transaction_id', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('mode', models.CharField(choices=[('CASH', 'Cash'), ('UPI', 'UPI'), ('NETBANKING', 'Netbanking'), ('PAYTM', 'PayTM'), ('OTHERS', 'Others')], max_length=10)),
                ('amount', models.IntegerField(default=0)),
                ('institute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Institute')),
            ],
        ),
        migrations.CreateModel(
            name='TestSeriesTransaction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('transaction_id', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('mode', models.CharField(choices=[('CASH', 'Cash'), ('UPI', 'UPI'), ('NETBANKING', 'Netbanking'), ('PAYTM', 'PayTM'), ('OTHERS', 'Others')], max_length=10)),
                ('amount', models.IntegerField(default=0)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('receipt', models.FileField(blank=True, null=True, storage=etests.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('institute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Institute')),
                ('test_series', models.ManyToManyField(related_name='aits_transactions', to='api.TestSeries')),
            ],
            options={
                'verbose_name_plural': 'Test Series Transactions',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('practice', models.BooleanField(default=False)),
                ('checkin_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=10800))),
                ('completed', models.BooleanField(default=False)),
                ('response', models.JSONField(blank=True, null=True)),
                ('result', models.JSONField(blank=True, default=list, null=True)),
                ('current', models.JSONField(blank=True, null=True)),
                ('marks', models.JSONField(blank=True, null=True)),
                ('ranks', models.JSONField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='api.Student')),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='api.Test')),
            ],
            options={
                'ordering': ('practice', 'checkin_time', 'test', 'student'),
            },
        ),
        migrations.CreateModel(
            name='ResetCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('reset_code', models.CharField(max_length=6)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('done', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='codes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(max_length=200)),
                ('receipt', models.FileField(blank=True, null=True, storage=etests.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('amount', models.IntegerField(default=0)),
                ('verified', models.BooleanField(default=False)),
                ('show', models.BooleanField(default=False)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='api.Student')),
                ('test_series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.TestSeries')),
            ],
        ),
        migrations.CreateModel(
            name='CreditUse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('credits_used', models.IntegerField(default=0)),
                ('institute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Institute')),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Test')),
            ],
            options={
                'verbose_name_plural': 'Credits Usage',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('position', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ('position', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('position', models.IntegerField(default=0)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='api.Subject')),
            ],
            options={
                'ordering': ('subject', 'position', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=20000)),
                ('answer', models.JSONField()),
                ('solution', models.CharField(blank=True, max_length=20000, null=True)),
                ('type', models.IntegerField(choices=[(0, 'Single Correct'), (1, 'Multiple Correct'), (2, 'Numerical'), (3, 'Matrix Match'), (4, 'Paragraph')])),
                ('difficulty', models.IntegerField(blank=True, choices=[(0, 'Very Easy'), (1, 'Easy'), (2, 'Medium'), (3, 'Hard'), (4, 'Very Hard')], null=True)),
                ('tags', models.JSONField(blank=True, default=list, null=True)),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Exam')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Subject')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Topic')),
                ('correct_marks', models.FloatField(default=4)),
                ('incorrect_marks', models.FloatField(default=1)),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Institute')),
                ('partial_marks', models.FloatField(default=0)),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Test')),
                ('option_count', models.IntegerField(default=4)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parts', to='api.Question')),
            ],
            options={
                'ordering': ('subject', 'topic', 'type', 'difficulty'),
            },
        ),
        migrations.AddField(
            model_name='institute',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='institutes', to='api.Student'),
        ),
        migrations.AddField(
            model_name='institute',
            name='carousel',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='institute',
            name='downloads',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='institute',
            name='faq',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='institute',
            name='features',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='institute',
            name='gallery',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='institute',
            name='team',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='institute',
            name='toppers',
            field=models.JSONField(default=list),
        ),
        migrations.AlterModelTable(
            name='institute',
            table=None,
        ),
        migrations.AlterModelTable(
            name='student',
            table=None,
        ),
        migrations.AlterModelTable(
            name='user',
            table=None,
        ),
        migrations.RenameField(
            model_name='institute',
            old_name='faq',
            new_name='faqs',
        ),
        migrations.AlterField(
            model_name='institute',
            name='carousel',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='institute',
            name='downloads',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='institute',
            name='faqs',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='institute',
            name='features',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='institute',
            name='gallery',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='institute',
            name='team',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='institute',
            name='toppers',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='institute',
            name='notifications',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name='institute',
            name='settings',
            field=models.JSONField(blank=True, default=dict, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='handle',
            field=models.SlugField(blank=True, null=True, unique=True),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=100)),
                ('description', models.CharField(max_length=250)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Institute')),
                ('date_added', models.DateField(auto_now_add=True, default=django.utils.timezone.now)),
            ],
        ),
        migrations.AlterField(
            model_name='institute',
            name='carousel',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name='institute',
            name='courses',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='downloads',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='faqs',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='features',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='gallery',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='team',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='toppers',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.ImageField(storage=etests.storage_backends.InstituteMediaStorage(), upload_to='', validators=[api.models.validate_file_size])),
            ],
        ),
        migrations.AddField(
            model_name='institute',
            name='centers',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='verification_code',
            field=models.CharField(default=api.utils.random_key, max_length=100),
        ),
        migrations.AddField(
            model_name='user',
            name='verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='institute',
            name='contacts',
            field=models.JSONField(blank=True, default=dict, null=True),
        ),
        migrations.AddField(
            model_name='institute',
            name='faculty',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='image',
            field=models.CharField(blank=True, max_length=2048, null=True),
        ),
        migrations.AddField(
            model_name='institute',
            name='questions',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name='institute',
            name='links',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name='institute',
            name='forms',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='site',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='api.Institute')),
                ('joining_key', models.CharField(default=api.utils.random_key, max_length=8)),
            ],
            options={
                'verbose_name_plural': 'Batches',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='test',
            name='registered_batches',
            field=models.ManyToManyField(blank=True, related_name='tests', to='api.Batch'),
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_number', models.CharField(max_length=25)),
                ('date_joined', models.DateField(default=datetime.datetime.now)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='api.Batch')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Institute')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enrollment', to='api.Student')),
            ],
            options={
                'unique_together': set(),
            },
        ),
        migrations.AddField(
            model_name='student',
            name='institutes',
            field=models.ManyToManyField(blank=True, related_name='students', through='api.Enrollment', to='api.Institute'),
        ),
        migrations.RemoveField(
            model_name='institute',
            name='students',
        ),
        migrations.AlterField(
            model_name='institute',
            name='handle',
            field=models.CharField(blank=True, max_length=50, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='carousel',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='downloads',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name='institute',
            name='extras',
            field=models.JSONField(blank=True, default=api.models.Institute.extras_default, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='faqs',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='features',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='gallery',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='team',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='institute',
            name='toppers',
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='test',
            name='answers',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='test',
            name='marks_list',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='test',
            name='questions',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='test',
            name='sections',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='test',
            name='stats',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=api.models.EmailField(blank=True, max_length=254, null=True, unique=True),
        ),
    ]
