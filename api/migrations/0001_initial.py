# Generated by Django 3.0.2 on 2020-02-07 03:49

import api.models
import api.utils
import datetime
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import etests.storage_backends


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_student', models.BooleanField(default=False)),
                ('is_institute', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'api_user',
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joining_key', models.CharField(default=api.utils.random_key, max_length=8)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Batches',
                'db_table': 'api_batch',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(blank=True, max_length=500, null=True)),
                ('address', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_number', models.CharField(max_length=25)),
                ('joining_key', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('date_joined', models.DateField(null=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='api.Batch')),
            ],
            options={
                'db_table': 'api_enrollment',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.IntegerField(verbose_name='position')),
                ('name', models.CharField(max_length=200)),
                ('countries', django_countries.fields.CountryField(blank=True, max_length=746, multiple=True)),
                ('slug', models.SlugField(editable=False)),
                ('image', models.CharField(blank=True, default='exam.png', max_length=20480, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.ImageField(storage=etests.storage_backends.PublicMediaStorage(), upload_to='', validators=[api.models.validate_file_size])),
            ],
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('current_credits', models.IntegerField(default=0)),
                ('verified', models.BooleanField(default=False)),
                ('show', models.BooleanField(default=True)),
                ('rating', models.FloatField(default=0)),
                ('about', models.CharField(blank=True, max_length=1024, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_institute',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=20000)),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField()),
                ('solution', models.CharField(blank=True, max_length=20000, null=True)),
                ('type', models.CharField(choices=[('0', 'Single Correct'), ('1', 'Multiple Correct'), ('2', 'Numerical'), ('3', 'Matrix Match')], max_length=10)),
                ('subject_index', models.IntegerField(blank=True, null=True)),
                ('topic_index', models.IntegerField(blank=True, null=True)),
                ('difficulty', models.CharField(blank=True, choices=[('0', 'Very Easy'), ('1', 'Easy'), ('2', 'Medium'), ('3', 'Hard'), ('4', 'Very Hard')], max_length=10, null=True)),
                ('tags', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=1, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('institutes', models.ManyToManyField(blank=True, related_name='students', through='api.Enrollment', to='api.Institute')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_student',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('aits', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('activation_time', models.DateTimeField(blank=True, null=True)),
                ('closing_time', models.DateTimeField(blank=True, null=True)),
                ('time_alotted', models.DurationField(default=datetime.timedelta(seconds=10800))),
                ('sections', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('questions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('answers', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('stats', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('corrected', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('visible', models.BooleanField(default=True)),
                ('free', models.BooleanField(default=False)),
                ('marks_list', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('syllabus', models.CharField(blank=True, max_length=1024, null=True)),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tests', to='api.Exam')),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Institute')),
                ('registered_batches', models.ManyToManyField(blank=True, related_name='tests', to='api.Batch')),
                ('registered_students', models.ManyToManyField(blank=True, related_name='tests', to='api.Student')),
            ],
        ),
        migrations.CreateModel(
            name='TestSeries',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('price', models.IntegerField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('visible', models.BooleanField(default=False)),
                ('discount', models.IntegerField(default=0)),
                ('exams', models.ManyToManyField(blank=True, related_name='test_series', to='api.Exam')),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_series', to='api.Institute')),
                ('registered_students', models.ManyToManyField(blank=True, to='api.Student')),
                ('tests', models.ManyToManyField(blank=True, related_name='test_series', to='api.Test')),
            ],
            options={
                'verbose_name': 'Test Series',
                'verbose_name_plural': 'Test Series',
            },
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('credits_added', models.IntegerField(default=0)),
                ('transaction_id', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('mode', models.CharField(choices=[('CASH', 'Cash'), ('UPI', 'UPI'), ('NETBANKING', 'Netbanking'), ('PAYTM', 'PayTM'), ('OTHERS', 'Others')], max_length=10)),
                ('amount', models.IntegerField(default=0)),
                ('institute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Institute')),
            ],
        ),
        migrations.CreateModel(
            name='TestSeriesTransaction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('transaction_id', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('mode', models.CharField(choices=[('CASH', 'Cash'), ('UPI', 'UPI'), ('NETBANKING', 'Netbanking'), ('PAYTM', 'PayTM'), ('OTHERS', 'Others')], max_length=10)),
                ('amount', models.IntegerField(default=0)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('receipt', models.FileField(blank=True, null=True, storage=etests.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('institute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Institute')),
                ('test_series', models.ManyToManyField(related_name='aits_transactions', to='api.TestSeries')),
            ],
            options={
                'verbose_name_plural': 'Test Series Transactions',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('practice', models.BooleanField(default=False)),
                ('checkin_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=10800))),
                ('completed', models.BooleanField(default=False)),
                ('response', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('result', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True)),
                ('current', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('marks', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ranks', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='api.Student')),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='api.Test')),
            ],
            options={
                'ordering': ['practice', 'checkin_time', 'test', 'student'],
            },
        ),
        migrations.CreateModel(
            name='ResetCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('reset_code', models.CharField(max_length=6)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('done', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='codes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(max_length=200)),
                ('receipt', models.FileField(blank=True, null=True, storage=etests.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('amount', models.IntegerField(default=0)),
                ('verified', models.BooleanField(default=False)),
                ('show', models.BooleanField(default=False)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='api.Student')),
                ('test_series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.TestSeries')),
            ],
        ),
        migrations.AddField(
            model_name='enrollment',
            name='institute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Institute'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enrollment', to='api.Student'),
        ),
        migrations.CreateModel(
            name='CreditUse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('credits_used', models.IntegerField(default=0)),
                ('institute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Institute')),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Test')),
            ],
            options={
                'verbose_name_plural': 'Credits Usage',
            },
        ),
        migrations.AddField(
            model_name='batch',
            name='institute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='api.Institute'),
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('batch', 'roll_number')},
        ),
    ]
