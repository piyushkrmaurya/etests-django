# Generated by Django 2.2.1 on 2019-06-03 12:59

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user is a staff member.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('state', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('is_student', models.BooleanField(default=False)),
                ('is_institute', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccessCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('limit', models.IntegerField()),
                ('key', models.CharField(blank=True, max_length=20)),
                ('use_count', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.IntegerField(verbose_name='position')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(editable=False)),
                ('image', models.ImageField(blank=True, default='static/images/exams/exam.png', max_length=20480, upload_to='static/images/exams/')),
                ('link', models.CharField(max_length=500)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pincode', models.CharField(max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=1)),
                ('birth_date', models.DateField()),
                ('institute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='eusers.Institute')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(editable=False)),
                ('image', models.ImageField(blank=True, default='static/images/subjects/subject.png', max_length=20480, upload_to='static/images/subjects/')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('type', models.CharField(choices=[('E', 'Exam_Related'), ('S', 'Subject_Related'), ('O', 'Others')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='UnitTest',
            fields=[
                ('name', models.CharField(max_length=20)),
                ('slug', models.SlugField(editable=False)),
                ('active', models.BooleanField(default=False)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=10800))),
                ('start_time', models.DateField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('visible', models.BooleanField(default=False)),
                ('practice', models.BooleanField(default=False)),
                ('price', models.IntegerField()),
                ('access_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit_tests', to='eusers.AccessCode')),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit_tests', to='eusers.Exam')),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit_tests', to='eusers.Institute')),
                ('registered_student', models.ManyToManyField(blank=True, related_name='unit_tests', to='eusers.Student')),
                ('tags', models.ManyToManyField(blank=True, to='eusers.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(blank=True, default='static/images/topics/topic.png', max_length=20480, upload_to='static/images/topics/')),
                ('slug', models.SlugField(editable=False)),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='eusers.Subject')),
            ],
            options={
                'ordering': ['subject', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TestSeries',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('price', models.IntegerField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('slug', models.SlugField(editable=False)),
                ('visible', models.BooleanField(default=False)),
                ('practice', models.BooleanField(default=False)),
                ('access_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testseries', to='eusers.AccessCode')),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testseries', to='eusers.Exam')),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testseries', to='eusers.Institute')),
                ('registered_student', models.ManyToManyField(blank=True, related_name='testseries', to='eusers.Student')),
                ('tags', models.ManyToManyField(blank=True, related_name='testseries', to='eusers.Tag')),
            ],
            options={
                'verbose_name': 'Test Series',
                'verbose_name_plural': 'Test Series',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('name', models.CharField(max_length=20)),
                ('slug', models.SlugField(editable=False)),
                ('active', models.BooleanField(default=False)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=10800))),
                ('start_time', models.DateField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tags', models.ManyToManyField(blank=True, to='eusers.Tag')),
                ('test_series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='eusers.TestSeries')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
